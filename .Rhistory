+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "PUNU", !is.na(Density))
mdf.m1 <- glmmTMB(Native.Biomass ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "JUAR", !is.na(Density))
mdf.m1 <- glmmTMB(Native.Biomass ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "BICE", !is.na(Density))
mdf.m1 <- glmmTMB(Native.Biomass ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EPCI", !is.na(Density))
mdf.m1 <- glmmTMB(Native.Biomass ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
library(tidyverse)
#Load objects
load("main_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA"& Species != "SYCI")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
Anova(mdf.m1, type = 3)
#Native biomass
table(biomass$Species)
mdf <- biomass %>%
dplyr::filter(!is.na(Density),
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA" & Species != "SYCI") %>%
dplyr::mutate(Species = factor(Species)) #need to remove the factor levels (species) that were removed
table(mdf$Species)
with(mdf, table(Species, Density, Phrag_Presence, useNA = "ifany"))
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
#this is messier, fewer observations for each, some boxplots bigger than others, but only 12 observations
#species have different variances that the transformation doesn't stabilize
#library(car)
Anova(mdf.m1, type = 3)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EPCI", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "HENU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "DISP", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EUMA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCPU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "RUMA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SOCA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EUOF", !is.na(Density))
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EUOC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "MUAs", !is.na(Density))
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "MUAS", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCAC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCAC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Phrag_Presence~Density, CIs = T)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "PUNU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "JUAR", !is.na(Density))
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "JUAR", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "BICE", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EPCI", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Phrag_Presence)
#library(car)
Anova(mdf.m1)
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
lm_cover_biomass <- lm(Cover.Phrag ~ Native.Biomass + Density + Group, data = final.all)
lm_cover_cover <- lm(Cover.Phrag ~ Cover.Native + Density + Group, data = final.all)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
lm_biomass_cover <- lm(Phrag.Biomass ~ Cover.Native + Density + Group, data = final.all)
ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 2) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover", color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
library(patchwork)
(c_b + c_c) / (b_b + b_c)
c<- deployments %>%
mutate(start_deployment = ymd(start_deployment),
end_deployment = ymd(end_deployment),
monitoring_period = as.numeric(difftime(end_deployment,
start_deployment,
units = "days"))) %>%
left_join(dragons) %>%
mutate(age_class = factor(age_class,
levels = c("Adult", "Subadult", "Juvenile"))) %>%
ggplot(aes(x = monitoring_period, y = age_class, fill = age_class), color = "black") +
ggridges::geom_density_ridges(scale = 8) +
theme_minimal() +
theme(legend.position = "none") +
labs(x = "Duration of monitoring period (days)", y = "") +
scale_fill_viridis_d(option = "magma")
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50) +
theme(legend.position = "none")
b_b
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50) +
theme(legend.position = "none")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)+
theme(legend.position = "none")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover", color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
(c_b + c_c) / (b_b + b_c)
ggsave(filename = "phrag_native_biomass_cover_graphs_all.jpeg",
device = "jpeg")
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
library(patchwork)
lm_cover_biomass <- lm(Cover.Phrag ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_cover_biomass)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_biomass_biomass)
#group seems to be significant for this one but only this one - bulrush, rush (make sense because they are 0), and grass (idk...)
emmeans(lm_biomass_biomass, pairwise~Group)
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
c_b
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group)) +
geom_point(aes(color = Group), size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
c_b
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group, color = Group)) +
geom_point( size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
c_b
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group, color = Group)) +
geom_point( size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none") +
facet_wrap(~Group)
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group, color = Group)) +
geom_point( size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)+
theme(legend.position = "none") +
facet_wrap(~Group, scales = "free_x")
c_b
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group, color = Group)) +
geom_point( size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(se=FALSE, fullrange = TRUE)+
theme(legend.position = "none")
#facet_wrap(~Group, scales = "free_x")
c_b
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag, group = Group, color = Group)) +
geom_point( size = 3) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(se=FALSE, fullrange = TRUE, span = 1.5)+
theme(legend.position = "none")
#facet_wrap(~Group, scales = "free_x")
c_b
?scale
#correlation
#scale centers and scales by default
lm_bb_correlation <- lm(Phrag.Biomass ~ scale(Native.Biomass), data = final.all)
lm(scale(Phrag.Biomass) ~ scale(Native.Biomass), data = final.all)
#correlation
#scale centers and scales by default
lm_bb_correlation <- lm(scale(Phrag.Biomass) ~ scale(Native.Biomass), data = final.all)
with(final.all, cor(Phrag.Biomass, Native.Biomass, method = "spearman"))
?cor
cor(final.all, Phrag.Biomass, Native.Biomass, method = "spearman")
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman")
final.all$Phrag.Biomass
final.all$Native.Biomass
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", na.rm = TRUE)
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", use = "complete.obs")
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "pearson", use = "complete.obs")
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", use = "complete.obs")
?cor.test
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "spearman", use = "complete.obs", exact = FALSE)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
