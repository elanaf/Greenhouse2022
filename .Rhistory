mdf_avg$Density[mdf_avg$Density == "H"] <- "High"
mdf_avg$Density[mdf_avg$Density == "L"] <- "Low"
mdf_avg$Density <- as.factor(mdf_avg$Density)
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
#now we test for all the pieces
#we want to know which species have an interaction and which don't, and which might have one effect
#then we want to know whether the interaction pattern is the same for each species
mdf.m1.emm <- emmeans(mdf.m1, ~Species * Density * Phrag_Presence)
emm <- emmeans(mdf.m1, pairwise ~ Species * Density * Phrag_Presence, adjust = "tukey", type = "response")
emm
data3 <- multcomp::cld(emm$emmeans, alpha = 0.05, Letters = letters)
data3
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EPCI", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "BICE", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "DISP", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EUMA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "EUOC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
0.006 < 0.001
0.006 < 0.01
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "HENU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "JUAR", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "MUAS", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "PUNU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
0.001966 < 0.001
0.001966 < 0.01
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "RUMA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCAC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCPU", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SOCA", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
#Native cover ####
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA"& Species != "SYCI")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf$Phrag_Presence <- as.character(mdf$Phrag_Presence)
mdf$Phrag_Presence[mdf$Phrag_Presence == "W"] <- "Present"
mdf$Phrag_Presence[mdf$Phrag_Presence == "WO"] <- "Absent"
mdf$Phrag_Presence <- as.factor(mdf$Phrag_Presence)
mdf$Density <- as.character(mdf$Density)
mdf$Density[mdf$Density == "H"] <- "High"
mdf$Density[mdf$Density == "L"] <- "Low"
mdf$Density <- as.factor(mdf$Density)
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
emmeans(mdf.m1, pairwise ~ Species * Density, adjust = "tukey", type = "response")
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "BICE", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "DISP", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "EPCI", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "EUOC", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "EUMA", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "HENU", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "JUAR", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "MUAS", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "PUNU", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "RUMA", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for biomass ####
mdf <- biomass %>%
filter(Species == "SCAC", !is.na(Density))
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "RUMA", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "SCAC", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "SCPU", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
##Model to run for Cover ####
mdf <- greenhouse %>%
filter(Species == "SOCA", !is.na(Density),
Date_Cleaned == "2022-05-16")
mdf.m1 <- glmmTMB(Cover.Native ~ Phrag_Presence * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
#library(car)
Anova(mdf.m1)
load("main_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
# Phrag cover ####
mdf <- greenhouse %>%
filter(Species != "PHAU", Phrag_Presence == "W",
Date_Cleaned == "2022-05-16")
##plotResiduals wasn't working so Susan sent me this code to figure out why
##You cannot have any missing values or 0 observations
#see what variables have missing values
mdf %>%
select(Cover.Phrag, Species, Density, Block) %>%
summarise_all(list(~sum(is.na(.))))
#drop observations with NA Cover.Phrag and refactor so that level is dropped
with(mdf, table(Species, useNA = "ifany")) #no observations for PHAU
mdf <- mdf %>%
drop_na(Cover.Phrag) %>%
mutate(Species = factor(Species))
with(mdf, table(Species, useNA = "ifany")) #note absence of Phrag level
mdf$Phrag_Presence <- as.character(mdf$Phrag_Presence)
mdf$Phrag_Presence[mdf$Phrag_Presence == "W"] <- "Present"
mdf$Phrag_Presence[mdf$Phrag_Presence == "WO"] <- "Absent"
mdf$Phrag_Presence <- as.factor(mdf$Phrag_Presence)
mdf$Density <- as.character(mdf$Density)
mdf$Density[mdf$Density == "H"] <- "High"
mdf$Density[mdf$Density == "L"] <- "Low"
mdf$Density <- as.factor(mdf$Density)
#change order of density and also labels for graphing
mdf$Density <- factor(mdf$Density, levels = c("Low", "High"),
labels = c("Low", "High")
)
##Species
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
#Load objects
load("main_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
# Phrag cover ####
mdf <- greenhouse %>%
filter(Species != "PHAU", Phrag_Presence == "W",
Date_Cleaned == "2022-05-16")
##plotResiduals wasn't working so Susan sent me this code to figure out why
##You cannot have any missing values or 0 observations
#see what variables have missing values
mdf %>%
select(Cover.Phrag, Species, Density, Block) %>%
summarise_all(list(~sum(is.na(.))))
#drop observations with NA Cover.Phrag and refactor so that level is dropped
with(mdf, table(Species, useNA = "ifany")) #no observations for PHAU
mdf <- mdf %>%
drop_na(Cover.Phrag) %>%
mutate(Species = factor(Species))
with(mdf, table(Species, useNA = "ifany")) #note absence of Phrag level
mdf$Phrag_Presence <- as.character(mdf$Phrag_Presence)
mdf$Phrag_Presence[mdf$Phrag_Presence == "W"] <- "Present"
mdf$Phrag_Presence[mdf$Phrag_Presence == "WO"] <- "Absent"
mdf$Phrag_Presence <- as.factor(mdf$Phrag_Presence)
mdf$Density <- as.character(mdf$Density)
mdf$Density[mdf$Density == "H"] <- "High"
mdf$Density[mdf$Density == "L"] <- "Low"
mdf$Density <- as.factor(mdf$Density)
#change order of density and also labels for graphing
mdf$Density <- factor(mdf$Density, levels = c("Low", "High"),
labels = c("Low", "High")
)
#back to model
mdf.m1 <- glmmTMB(Cover.Phrag ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
##Species
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
dat <- as.data.frame(emm$contrasts)
View(dat)
4.808272e-02
< 0.001
4.808272e-02 < 0.001
4.808272e-02 < 0.01
4.808272e-02 < 0.1
3.5e-05 < 0.001
3.5e-05 < 0.0001
3.5e-03 < 0.0001
3.5e-03 < 0.001
3.5e-03 < 0.01
1.09e-03 < 0.001
1.09e-03 < 0.01
7.35e-03 < 0.001
7.35e-03 < 0.01
getwd()
write.csv(dat, "/Users/elanafeldman/Desktop)
)
))
fs
32432
sdfsdfnlknkjd. val'nfewr'
ewer
.
/sdf
.jpeg
getwd()
write.csv(dat, "/Users/elanafeldman/Desktop")
write.csv(dat)
write.csv(dat, "/Users/elanafeldman/Desktop/pairwise-phrag-cover-species.csv")
3.49e-05 < 0.0001
0.0012 < 0.001
0.0012 < 0.01
0.001 < 0.01
0.000389814331603566 < 0.001
0.000389814331603566 < 0.0001
0.000276691130774664 < 0.0001
0.000276691130774664 < 0.001
# Phrag biomass ####
mdf <- biomass %>%
filter(Species != "PHAU", Phrag_Presence == "W")
mdf$Phrag_Presence <- as.character(mdf$Phrag_Presence)
mdf$Phrag_Presence[mdf$Phrag_Presence == "W"] <- "Present"
mdf$Phrag_Presence[mdf$Phrag_Presence == "WO"] <- "Absent"
mdf$Phrag_Presence <- as.factor(mdf$Phrag_Presence)
mdf$Density <- as.character(mdf$Density)
mdf$Density[mdf$Density == "H"] <- "High"
mdf$Density[mdf$Density == "L"] <- "Low"
mdf$Density <- as.factor(mdf$Density)
#Load objects
load("main_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
# Phrag biomass ####
mdf <- biomass %>%
filter(Species != "PHAU", Phrag_Presence == "W")
mdf$Phrag_Presence <- as.character(mdf$Phrag_Presence)
mdf$Phrag_Presence[mdf$Phrag_Presence == "W"] <- "Present"
mdf$Phrag_Presence[mdf$Phrag_Presence == "WO"] <- "Absent"
mdf$Phrag_Presence <- as.factor(mdf$Phrag_Presence)
mdf$Density <- as.character(mdf$Density)
mdf$Density[mdf$Density == "H"] <- "High"
mdf$Density[mdf$Density == "L"] <- "Low"
mdf$Density <- as.factor(mdf$Density)
#change order of density and also labels for graphing
mdf$Density <- factor(mdf$Density, levels = c("Low", "High"),
labels = c("Low", "High")
)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
##Species ####
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
dat <- emm$contrasts
View(dat)
dat <- as.data.frame(dat)
write.csv(dat, "/Users/elanafeldman/Desktop/pairwise-phrag-biomass-species.csv")
