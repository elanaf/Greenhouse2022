nobs = count(Tub)) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
summarize::nobs = n()) %>%#to average the BICE where there is an extra observation
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
useData <- drop_na(mdf_avg) #need to get rid of NAs
plotResiduals(mdf.m1_res, form= useData$Phrag_Presence)
#warning message because Phrag_Presence is a character, but it runs
#slight difference but good enough
plotResiduals(mdf.m1_res, form= useData$Density)
#variance slightly less in low density but again good enough
plotResiduals(mdf.m1_res, form= useData$Species)
#this is messier, fewer observations for each, some boxplots bigger than others, but only 12 observations
#species have different variances that the transformation doesn't stabilize
#library(car)
Anova(mdf.m1, type = 3)
#there is evidence of a significant 3-way interaction - other interactions not interpretable because of 3 way
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
load("main_dfs.RData")
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
options(contrasts = c("contr.sum", "contr.poly"))
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Species <- as.factor(greenhouse$Species)
mdf <- greenhouse %>%
filter(Species != "PHAU", Phrag_Presence == "W",
Date_Cleaned == "2022-05-16")
#see what variables have missing values
mdf %>%
select(Cover.Phrag, Species, Density, Block) %>%
summarise_all(list(~sum(is.na(.))))
#drop observations with NA Cover.Phrag and refactor so that level is dropped
with(mdf, table(Species, useNA = "ifany")) #no observations for PHAU
mdf <- mdf %>%
drop_na(Cover.Phrag) %>%
mutate(Species = factor(Species))
with(mdf, table(Species, useNA = "ifany")) #note absence of Phrag level
#back to model
mdf.m1 <- glmmTMB(Cover.Phrag ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Species)
#library(car)
car::Anova(mdf.m1)
emmip(mdf.m1, Species~Density, CIs = T)
#to see which species Density mattered for - but results don't match what I would have expected?
emmeans(mdf.m1, pairwise ~ Density | Species)
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
pwpm(emm)
data1 <- multcomp::cld(emm$emmeans, alpha = 0.05, Letters = letters)
data1
##Model to run for biomass
mdf <- biomass %>%
filter(Species != "PHAU", Phrag_Presence == "W")
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
#Call objects
load("main_dfs.RData")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
install.packages('TMB', type = 'source')
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
detach("package:emmeans", unload = TRUE)
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
#Call objects
load("main_dfs.RData")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
####How much did phrag cover/etc. actually reduce?####
##New graphs that show how phrag changes over time compared to what is expected
#create a new, smaller dataset to work with
final.data <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17") %>%
select(Tub, Species, Density, Block, Phrag_Presence,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
#make different datasets based on block to make calculations easier
final.data.b1 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 1) %>% #only block 1
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
final.data.b2 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 2) %>% #only block 1
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
final.data.b3 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 3) %>% #only block 3
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
#mutate them to have the reduction value, based on the control in each block
#first, get the phrag height and cover values of the control
control.matrix <- final.data %>%
filter(Species == "PHAU")
height.control.1 <- control.matrix$Height.Phrag[1]
cover.control.1 <- control.matrix$Cover.Phrag[1]
height.control.2 <- control.matrix$Height.Phrag[2]
cover.control.2 <- control.matrix$Cover.Phrag[2]
height.control.3 <- control.matrix$Height.Phrag[3]
cover.control.3 <- control.matrix$Cover.Phrag[3]
#now mutate the block datasets to get the reduction value
final.data.b1 <- final.data.b1 %>%
mutate(P.Height.Red =
(final.data.b1$Height.Phrag - height.control.1)/height.control.1,
P.Cover.Red =
(final.data.b1$Cover.Phrag - cover.control.1)/cover.control.1)
final.data.b2 <- final.data.b2 %>%
mutate(P.Height.Red =
(final.data.b2$Height.Phrag - height.control.2)/height.control.2,
P.Cover.Red =
(final.data.b2$Cover.Phrag - cover.control.2)/cover.control.2)
final.data.b3 <- final.data.b3 %>%
mutate(P.Height.Red =
(final.data.b3$Height.Phrag - height.control.3)/height.control.3,
P.Cover.Red =
(final.data.b3$Cover.Phrag - cover.control.3)/cover.control.3)
#combine back into 1 dataset to graph
combine1 <- bind_rows(final.data.b1, final.data.b2)
final.data.red <- bind_rows(combine1, final.data.b3)
#and now for biomass
#make different datasets based on block to make calculations easier
biomass.b1 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 1) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
biomass.b2 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 2) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
biomass.b3 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 3) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
#mutate them to have the reduction value, based on the control in each block
#first, get the phrag height and cover values of the control
control.matrix <- biomass %>%
filter(Species == "PHAU")
biomass.control.1 <- control.matrix$Phrag.Biomass[1]
biomass.control.2 <- control.matrix$Phrag.Biomass[2]
biomass.control.3 <- control.matrix$Phrag.Biomass[3]
#now mutate the block datasets to get the reduction value
biomass.b1 <- biomass.b1 %>%
mutate(P.Biomass.Red =
(biomass.b1$Phrag.Biomass - biomass.control.1)/biomass.control.1)
biomass.b2 <- biomass.b2 %>%
mutate(P.Biomass.Red =
(biomass.b2$Phrag.Biomass - biomass.control.2)/biomass.control.2)
biomass.b3 <- biomass.b3 %>%
mutate(P.Biomass.Red =
(biomass.b3$Phrag.Biomass - biomass.control.3)/biomass.control.3)
#combine back into 1 dataset to graph
combine1 <- bind_rows(biomass.b1, biomass.b2)
final.biomass.red <- bind_rows(combine1, biomass.b3)
install.packages("mdthemes")
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Biomass.Red), y = P.Biomass.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
mdthemes::md_theme_classic() +
labs(y = "Change in *Phragmites* Biomass", x = "Species")
biomass.red
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Biomass.Red), y = P.Biomass.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Change in *Phragmites* Biomass", x = "Species")
biomass.red
ggsave(filename = "cover_reduction.jpeg",
device = "jpeg")
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Biomass.Red), y = P.Biomass.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Change in *Phragmites* Biomass", x = "Species")
biomass.red
ggsave(filename = "biomass_reduction.jpeg",
device = "jpeg")
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Cover.Red), y = P.Cover.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Percent Change in *Phragmites* Cover", x = "Species")
cover.red
ggsave(filename = "cover_reduction.jpeg",
device = "jpeg")
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_grp, by = c("Species"))
#Get the actual numbers
final_means_cover <- final.data.red %>%
filter(Species != "PHAU") %>%
group_by(Species, Density) %>%
summarise(trt_mean = mean(P.Cover.Red, na.rm = TRUE))
final_means_biomass <- final.biomass.red %>%
filter(Species != "PHAU") %>%
group_by(Species, Density) %>%
summarise(trt_mean = mean(P.Biomass.Red, na.rm = TRUE))
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_grp, by = c("Species"))
func_group <- read.csv("~/Cleaned_Data/Groups_Final.csv")
func_group <- read.csv("Home/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
getwd()
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
final.all <- left_join(final, func_group, by = c("Species"))
View(final.all)
lm_cover_biomass <- lm(Cover.Phrag ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_cover_biomass)
lm_cover_cover <- lm(Cover.Phrag ~ Cover.Native + Density + Group, data = final.all)
summary(lm_cover_cover)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_biomass_biomass)
lm_biomass_cover <- lm(Phrag.Biomass ~ Cover.Native + Density + Group, data = final.all)
summary(lm_biomass_cover)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
themes(axis.title.y = ggtext(element_markdown()))
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
themes(axis.title.y = ggtext(element_markdown()))+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext(element_markdown()))+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
grid.arrange(b_b, b_c, c_b, c_c, ncol = 2, nrow = 2)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", fill = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
func_group
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
grid.arrange(b_b, b_c, c_b, c_c, ncol = 2, nrow = 2)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover", color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
