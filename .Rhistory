final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_grp, by = c("Species"))
func_group <- read.csv("~/Cleaned_Data/Groups_Final.csv")
func_group <- read.csv("Home/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
getwd()
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
final.all <- left_join(final, func_group, by = c("Species"))
View(final.all)
lm_cover_biomass <- lm(Cover.Phrag ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_cover_biomass)
lm_cover_cover <- lm(Cover.Phrag ~ Cover.Native + Density + Group, data = final.all)
summary(lm_cover_cover)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_biomass_biomass)
lm_biomass_cover <- lm(Phrag.Biomass ~ Cover.Native + Density + Group, data = final.all)
summary(lm_biomass_cover)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
themes(axis.title.y = ggtext(element_markdown()))
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
themes(axis.title.y = ggtext(element_markdown()))+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext(element_markdown()))+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
grid.arrange(b_b, b_c, c_b, c_c, ncol = 2, nrow = 2)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", fill = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
func_group
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
func_group
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
grid.arrange(b_b, b_c, c_b, c_c, ncol = 2, nrow = 2)
#Graphs
b_b <- ggplot(final.all, aes(x = Native.Biomass, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_b
ggsave(filename = "lm_native-biomass_phrag-biomass.jpeg",
device = "jpeg")
b_c <- ggplot(final.all, aes(x = Cover.Native, y = Phrag.Biomass)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Biomass", color = "Functional Group") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
b_c
b_c
ggsave(filename = "lm_native-cover_phrag-biomass.jpeg",
device = "jpeg")
c_b <- ggplot(final.all, aes(x = Native.Biomass, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Biomass", y = "*Phragmites* Cover",color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_b
ggsave(filename = "lm_native-biomass_phrag-cover.jpeg",
device = "jpeg")
c_c <- ggplot(final.all, aes(x = Cover.Native, y = Cover.Phrag)) +
geom_point(aes(color = Group)) +
theme(axis.title.y = ggtext::element_markdown())+
labs(x = "Native Cover", y = "*Phragmites* Cover", color = "Functional Group")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
c_c
ggsave(filename = "lm_native-cover_phrag-cover.jpeg",
device = "jpeg")
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(gridExtra)
library(ggtext)
#Load objects
load("main_dfs.RData")
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
install.packages("TMB")
#Load objects
load("main_dfs.RData")
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
install.packages("Matrix")
load("main_dfs.RData")
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
install.packages("glmmTMB")
#Load objects
load("main_dfs.RData")
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
?reinstalling
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
#Native biomass
table(biomass$Species)
mdf <- biomass %>%
dplyr::filter(!is.na(Density),
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA") %>%
dplyr::mutate(Species = factor(Species)) #need to remove the factor levels (species) that were removed
table(mdf$Species)
with(mdf, table(Species, Density, Phrag_Presence, useNA = "ifany"))
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
useData <- drop_na(mdf_avg) #need to get rid of NAs
plotResiduals(mdf.m1_res, form= useData$Phrag_Presence)
#warning message because Phrag_Presence is a character, but it runs
#slight difference but good enough
plotResiduals(mdf.m1_res, form= useData$Density)
#variance slightly less in low density but again good enough
plotResiduals(mdf.m1_res, form= useData$Species)
#this is messier, fewer observations for each, some boxplots bigger than others, but only 12 observations
#species have different variances that the transformation doesn't stabilize
#library(car)
Anova(mdf.m1, type = 3)
#there is evidence of a significant 3-way interaction - other interactions not interpretable because of 3 way
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
#now we test for all the pieces
#we want to know which species have an interaction and which don't, and which might have one effect
#then we want to know whether the interaction pattern is the same for each species
mdf.m1.emm <- emmeans(mdf.m1, ~Species * Density * Phrag_Presence)
pairs(mdf.m1.emm, by = c("Density", "Phrag_Presence"))
pairs(mdf.m1.emm, by = c("Density", "Phrag_Presence"))
summary(mdf.m1)
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
Anova(mdf.m1, type = 3)
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
summary(mdf.m1)
Anova(mdf.m1, type = 3)
#Native biomass
table(biomass$Species)
mdf <- biomass %>%
dplyr::filter(!is.na(Density),
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA") %>%
dplyr::mutate(Species = factor(Species)) #need to remove the factor levels (species) that were removed
table(mdf$Species)
with(mdf, table(Species, Density, Phrag_Presence, useNA = "ifany"))
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
useData <- drop_na(mdf_avg) #need to get rid of NAs
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
#everything is being compared to the reference species (BICE) with the default contrast but we changed it to sum
#intercept now represents the mean across all the species - re-read email about the contrasts
#the standard errors should be the same if everything is balanced
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
mdf.m1<- glmmTMB(sqrt(Cover.Native) ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(sqrt(Cover.Native) ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(log(Cover.Native) ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
mdf.m1<- glmmTMB(log(Cover.Native) ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
mdf.m1<- glmmTMB(log(Cover.Native) ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
table(biomass$Species)
mdf <- biomass %>%
dplyr::filter(!is.na(Density),
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA") %>%
dplyr::mutate(Species = factor(Species)) #need to remove the factor levels (species) that were removed
table(mdf$Species)
with(mdf, table(Species, Density, Phrag_Presence, useNA = "ifany"))
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
useData <- drop_na(mdf_avg) #need to get rid of NAs
plotResiduals(mdf.m1_res, form= useData$Phrag_Presence)
#warning message because Phrag_Presence is a character, but it runs
#slight difference but good enough
plotResiduals(mdf.m1_res, form= useData$Density)
#this is messier, fewer observations for each, some boxplots bigger than others, but only 12 observations
#species have different variances that the transformation doesn't stabilize
#library(car)
Anova(mdf.m1, type = 3)
#there is evidence of a significant 3-way interaction - other interactions not interpretable because of 3 way
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
load("main_dfs.RData")
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
options(contrasts = c("contr.sum", "contr.poly"))
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Species <- as.factor(greenhouse$Species)
mdf <- greenhouse %>%
filter(Species != "PHAU", Phrag_Presence == "W",
Date_Cleaned == "2022-05-16")
#see what variables have missing values
mdf %>%
select(Cover.Phrag, Species, Density, Block) %>%
summarise_all(list(~sum(is.na(.))))
#drop observations with NA Cover.Phrag and refactor so that level is dropped
with(mdf, table(Species, useNA = "ifany")) #no observations for PHAU
mdf <- mdf %>%
drop_na(Cover.Phrag) %>%
mutate(Species = factor(Species))
with(mdf, table(Species, useNA = "ifany")) #note absence of Phrag level
#back to model
mdf.m1 <- glmmTMB(Cover.Phrag ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family #change the family to beta
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= mdf$Species)
#library(car)
car::Anova(mdf.m1)
emmip(mdf.m1, Species~Density, CIs = T)
#to see which species Density mattered for - but results don't match what I would have expected?
emmeans(mdf.m1, pairwise ~ Density | Species)
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
pwpm(emm)
data1 <- multcomp::cld(emm$emmeans, alpha = 0.05, Letters = letters)
data1
##Model to run for biomass
mdf <- biomass %>%
filter(Species != "PHAU", Phrag_Presence == "W")
summary(mdf.m1)
#library(car)
car::Anova(mdf.m1)
emmip(mdf.m1, Species~Density, CIs = T)
data1
##Model to run for biomass
mdf <- biomass %>%
filter(Species != "PHAU", Phrag_Presence == "W")
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Species * Density #* for interaction
+ (1|Block),
data = mdf,
family = gaussian
)
summary(mdf.m1)
#library(car)
Anova(mdf.m1)
emmip(mdf.m1, Species~Density, CIs = T)
emm <- emmeans(mdf.m1, pairwise ~ Species, adjust = "tukey", type = "response")
data2 <- multcomp::cld(emm$emmeans, alpha = 0.05, Letters = letters)
data2
