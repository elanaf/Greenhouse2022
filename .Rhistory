mutate(mean = mean(Pos.Red)) %>%
arrange(mean) %>%
View()
?stat_summary
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95),
na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red))
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red))))
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
View()
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean)
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean) %>%
View()
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean) %>%
as.vector(Species)
final.data.red %>%
filter(Species != "PHAU") %>%
mutate(Species = factor(Species,
levels = c("SCAM", "JUAR", "SCAC",
"JUGE", "SYCI", "MUAS", "PUNU",
"BOMA", "SOCA", "SCPU", "EUOC", "JUTO",
"DISP", "EUMA", "BICE", "EPCI",
"RUMA", "HENU"))) %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
ggsave(filename = "cover_reduction.jpeg",
device = "jpeg")
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
library(emmeans)
library(glmmTMB)
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Species <- as.factor(final.all$Species)
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
simulateResiduals?
.
?simulateResiduals
library(DHARMa)
library(car)
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Species <- as.factor(final.all$Species)
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
Anova(mdf.m1)
#no three way interaction
#interaction between biomass & group and group & density
emmip(mdf.m1, Native.Biomass~Density|Group, CIs = T)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass*Density*Group, type = "response")
pairs(mdf.m1.emm, by = "Density")
pairs(mdf.m1.emm, by = "Group")
pairs(mdf.m1.emm, by = c("Density", "Group"))
pairs(mdf.m1.emm, by = "Density")
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass*Density*Group, type = "response")
#no three way interaction
#interaction between biomass & group and group & density
emmip(mdf.m1, Native.Biomass~Density|Group, CIs = T)
#no three way interaction
#interaction between biomass & group and group & density
emmip(mdf.m1, Native.Biomass~Group|Density, CIs = T)
emmeans(mdf.m1, ~Native.Biomass*Density*Group, type = "response")
emmeans(mdf.m1, ~Native.Biomass*Density*Group, type = "response")
emmeans(mdf.m1, ~Native.Biomass*Density*Group, type = "response")
#no three way interaction
#interaction between biomass & group and group & density
emmip(mdf.m1, Native.Biomass~Group|Density, CIs = T)
#no three way interaction
#interaction between biomass & group and group & density
emmip(mdf.m1, Native.Biomass~Density|Group, CIs = T)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group)
emmeans(mdf.m1, ~Native.Biomass * Density * Group)
pairs(mdf.m1.emm, by = c("Density", "Group"))
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
pairs(mdf.m1.emm, simple = "Group")
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
emmip(mdf.m1, Group~Density|Native.Biomass, CIs = T)
emmip(mdf.m1, Native.Biomass~Density|Group, CIs = T)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group)
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
pairs(mdf.m1.emm, by = c("Group", "Native.Biomass"))
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
pairs(mdf.m1.emm, simple = "Group")
pairs(mdf.m1.emm, by = c("Group", "Density"))
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group, type = "response", adjust = "tukey")
mdf.m1.emm
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
pairs(mdf.m1.emm, by = c("Group", "Native.Biomass"))
data1 <- multcomp::cld(mdf.m1.emm, alpha = 0.1, Letters = letters)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group, type = "response")
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
pairs(mdf.m1.emm, by = c("Group", "Native.Biomass"))
data1 <- multcomp::cld(mdf.m1.emm, alpha = 0.1, Letters = letters)
data1
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
library(emmeans)
library(glmmTMB)
library(DHARMa)
library(car)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Species <- as.factor(final.all$Species)
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
Anova(mdf.m1)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group, type = "response")
data1 <- multcomp::cld(mdf.m1.emm, alpha = 0.1, Letters = letters)
data1
load("main_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
greenhouse$Density <- as.factor(greenhouse$Density)
greenhouse$Phrag_Presence <- as.factor(greenhouse$Phrag_Presence)
greenhouse$Species <- as.factor(greenhouse$Species)
options(contrasts = c("contr.sum", "contr.poly"))
#Native cover
mdf <- greenhouse %>%
dplyr::filter(!is.na(Density),
Date_Cleaned == "2022-05-16",
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA"& Species != "SYCI")
mdf$Cover.Native[mdf$Cover.Native == 0] <- 0.005 #make 0s a trace amount - could be half the smallest amount
mdf.m1<- glmmTMB(Cover.Native ~ Phrag_Presence * Density * Species  #* for interaction
+ (1|Block),
data = mdf,
family = beta_family)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
Anova(mdf.m1, type = 3)
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
#Native biomass
table(biomass$Species)
mdf <- biomass %>%
dplyr::filter(!is.na(Density),
Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" & Species != "BOMA" & Species != "SYCI") %>%
dplyr::mutate(Species = factor(Species)) #need to remove the factor levels (species) that were removed
table(mdf$Species)
with(mdf, table(Species, Density, Phrag_Presence, useNA = "ifany"))
mdf_avg <- mdf %>%
dplyr::group_by(Block, Phrag_Presence, Density, Species) %>%
dplyr::summarize(Native.Biomass = mean(Native.Biomass),
nobs = dplyr::n()) %>%#to average the BICE where there is an extra observation
dplyr::ungroup()
table(mdf_avg$nobs) #double check to make sure BICE is the only one with 2 observations
summary(mdf_avg$Native.Biomass) #no 0s so log shouldnt be a problem
mdf.m1 <- glmmTMB(sqrt(Native.Biomass) ~ Phrag_Presence * Density * Species #* for interaction
+ (1|Block),
data = mdf_avg
)
summary(mdf.m1)
mdf.m1_res <- simulateResiduals(mdf.m1, plot = T)
useData <- drop_na(mdf_avg) #need to get rid of NAs
plotResiduals(mdf.m1_res, form= useData$Phrag_Presence)
#warning message because Phrag_Presence is a character, but it runs
#slight difference but good enough
plotResiduals(mdf.m1_res, form= useData$Density)
#variance slightly less in low density but again good enough
plotResiduals(mdf.m1_res, form= useData$Species)
#this is messier, fewer observations for each, some boxplots bigger than others, but only 12 observations
#species have different variances that the transformation doesn't stabilize
#library(car)
Anova(mdf.m1, type = 3)
#there is evidence of a significant 3-way interaction - other interactions not interpretable because of 3 way
emmip(mdf.m1, Species~Density|Phrag_Presence, CIs = T)
emmip(mdf.m1, Phrag_Presence~Density|Species, CIs = T)
#now we test for all the pieces
#we want to know which species have an interaction and which don't, and which might have one effect
#then we want to know whether the interaction pattern is the same for each species
mdf.m1.emm <- emmeans(mdf.m1, ~Species * Density * Phrag_Presence)
pairs(mdf.m1.emm, by = c("Density", "Phrag_Presence"))
pairs(mdf.m1.emm, simple = "Species")
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Species <- as.factor(final.all$Species)
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
library(emmeans)
library(glmmTMB)
library(DHARMa)
library(car)
options(contrasts = c("contr.sum", "contr.poly"))
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Species <- as.factor(final.all$Species)
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
Anova(mdf.m1)
emmip(mdf.m1, Group|Native.Biomass, CIs = T)
emmip(mdf.m1, Group~Native.Biomass, CIs = T)
emmip(mdf.m1, Density~Group, CIs = T)
emmip(mdf.m1, Native.Biomass~Group, CIs = T)
class(final.all$Native.Biomass)
#Bulrush higher than the others, Rush maybe higher than the others
#Rush maybe higher but large confidence interval
emmip(mdf.m1, Density~Group, CIs = T)
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group, type = "response")
data1 <- multcomp::cld(mdf.m1.emm, alpha = 0.1, Letters = letters)
pairs(mdf.m1.emm, by = c("Density", "Native.Biomass"))
mdf.m1 <- glmmTMB(log(Seeded) ~ Group * Density #* for interaction
+ (1|Block),
data = fb2,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
load("clean_dfs.RData")
mdf.m1.emm <- emmeans(mdf.m1, ~Native.Biomass * Density * Group, type = "response")
emm1 <- emmeans(mdf.m1, pairwise~Native.Biomass|Group, type = "response", adjust = "tukey")
data1 <- multcomp::cld(emm1, alpha = 0.1, Letters = letters)
emm1
final.all$Native.Biomass
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
library(emmeans)
library(glmmTMB)
library(DHARMa)
library(car)
options(contrasts = c("contr.sum", "contr.poly"))
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
Anova(mdf.m1)
emmip(mdf.m1, Native.Biomass~Group, CIs = T)
mdf.m1
summary(mdf.m1)
emmip(mdf.m1, Native.Biomass~Group, CIs = T)
#Bulrush higher than the others, Rush maybe higher than the others
#Rush maybe higher but large confidence interval
emmip(mdf.m1, Density~Group, CIs = T)
emm1 <- emmeans(mdf.m1, pairwise~Native.Biomass|Group, type = "response", adjust = "tukey")
emm1
data1 <- multcomp::cld(emm1, alpha = 0.1, Letters = letters)
data1
mdf.m2 <- glmmTMB(sqrt(Cover.Phrag) ~ Cover.Native * Group + Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m2)
simulateResiduals(mdf.m2, plot = T) #fit isn't great
plotResiduals(mdf.m2, form= final.all$Density)
simulateResiduals(mdf.m2, plot = T) #fit isn't great
mdf.m2 <- glmmTMB(sqrt(Cover.Phrag) ~ Cover.Native * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m2)
mdf.m2 <- glmmTMB(sqrt(Cover.Phrag) ~ Cover.Native * Group + Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m2)
simulateResiduals(mdf.m2, plot = T) #fit isn't great
mdf.m3 <- glmmTMB(sqrt(Cover.Phrag) ~ Cover.Native * Density + Group
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m3)
emmip(mdf.m1, Native.Biomass~Group, CIs = T, cov.reduce = "range")
emmip(mdf.m1, Native.Biomass~Group, CIs = T, cov.reduce = range)
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
library(emmeans)
library(glmmTMB)
library(DHARMa)
library(car)
options(contrasts = c("contr.sum", "contr.poly"))
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
dplyr::select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
#need to remove the species with NAs as I did before
final.all <- final.all %>%
filter(Species != "JUTO" & Species != "JUGE"  & Species != "SCAM" &
Species != "BOMA"& Species != "SYCI")
final.all$Density <- as.factor(final.all$Density)
final.all$Group <- as.factor(final.all$Group)
mdf.m1 <- glmmTMB(sqrt(Phrag.Biomass) ~ Native.Biomass * Group * Density
+ (1|Block),
data = final.all,
family = gaussian
)
summary(mdf.m1)
simulateResiduals(mdf.m1, plot = T)
plotResiduals(mdf.m1, form= final.all$Density)
Anova(mdf.m1)
emmip(mdf.m1, Native.Biomass~Group, CIs = T, cov.reduce = range)
#Estimates are the same for all groups at the lower range of the native biomass
#but at the upper range, Bulrush is higher and Rush is maybe higher
emmip(mdf.m1, Density~Group, CIs = T)
emm1 <- emmeans(mdf.m1, pairwise~Native.Biomass|Group, type = "response", adjust = "tukey", cov.reduce = range)
emm1
emmip(mdf.m1, Native.Biomass~Group, CIs = T, cov.reduce = range)
data1 <- multcomp::cld(emm1, alpha = 0.1, Letters = letters)
data1
emm1
emm1
data1
emmip(mdf.m1, Native.Biomass~Group, CIs = T, cov.reduce = range)
emm1
data1
emmip(mdf.m1, Density~Group, CIs = T)
Anova(mdf.m1)
emm1
emmip(mdf.m1, Density~Group, CIs = T)
emmeans(mdf.m1, pairwise~Density|Group, type = "response", adjust = "tukey")
