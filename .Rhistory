theme(legend.position = "none")
#facet_wrap(~Group, scales = "free_x")
c_b
?scale
#correlation
#scale centers and scales by default
lm_bb_correlation <- lm(Phrag.Biomass ~ scale(Native.Biomass), data = final.all)
lm(scale(Phrag.Biomass) ~ scale(Native.Biomass), data = final.all)
#correlation
#scale centers and scales by default
lm_bb_correlation <- lm(scale(Phrag.Biomass) ~ scale(Native.Biomass), data = final.all)
with(final.all, cor(Phrag.Biomass, Native.Biomass, method = "spearman"))
?cor
cor(final.all, Phrag.Biomass, Native.Biomass, method = "spearman")
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman")
final.all$Phrag.Biomass
final.all$Native.Biomass
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", na.rm = TRUE)
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", use = "complete.obs")
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "pearson", use = "complete.obs")
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "spearman", use = "complete.obs")
?cor.test
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "spearman", use = "complete.obs", exact = FALSE)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
library(tidyverse)
####How much did phrag cover/etc. actually reduce?####
##New graphs that show how phrag changes over time compared to what is expected
#create a new, smaller dataset to work with
final.data <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17") %>%
select(Tub, Species, Density, Block, Phrag_Presence,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
#make different datasets based on block to make calculations easier
final.data.b1 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 1) %>% #only block 1
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
final.data.b2 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 2) %>% #only block 1
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
final.data.b3 <- greenhouse %>%
filter(Date == "2022-05-16" | Date == "2022-05-17",#only the last sampling date
Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 3) %>% #only block 3
select(Tub, Species, Density, Block,
Date_Cleaned, Cover.Native, Cover.Phrag,
Height.Native, Height.Phrag) #only select the columns I will need to work with
#mutate them to have the reduction value, based on the control in each block
#first, get the phrag height and cover values of the control
control.matrix <- final.data %>%
filter(Species == "PHAU")
height.control.1 <- control.matrix$Height.Phrag[1]
cover.control.1 <- control.matrix$Cover.Phrag[1]
height.control.2 <- control.matrix$Height.Phrag[2]
cover.control.2 <- control.matrix$Cover.Phrag[2]
height.control.3 <- control.matrix$Height.Phrag[3]
cover.control.3 <- control.matrix$Cover.Phrag[3]
#now mutate the block datasets to get the reduction value
final.data.b1 <- final.data.b1 %>%
mutate(P.Height.Red =
(final.data.b1$Height.Phrag - height.control.1)/height.control.1,
P.Cover.Red =
(final.data.b1$Cover.Phrag - cover.control.1)/cover.control.1)
final.data.b2 <- final.data.b2 %>%
mutate(P.Height.Red =
(final.data.b2$Height.Phrag - height.control.2)/height.control.2,
P.Cover.Red =
(final.data.b2$Cover.Phrag - cover.control.2)/cover.control.2)
final.data.b3 <- final.data.b3 %>%
mutate(P.Height.Red =
(final.data.b3$Height.Phrag - height.control.3)/height.control.3,
P.Cover.Red =
(final.data.b3$Cover.Phrag - cover.control.3)/cover.control.3)
#combine back into 1 dataset to graph
combine1 <- bind_rows(final.data.b1, final.data.b2)
final.data.red <- bind_rows(combine1, final.data.b3)
#and now for biomass
#make different datasets based on block to make calculations easier
biomass.b1 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 1) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
biomass.b2 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 2) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
biomass.b3 <- biomass %>%
filter(Phrag_Presence == "W", #only the ones that had phrag grow with them
Block == 3) %>% #only block 1
select(Tub, Species, Density, Block,
Phrag.Biomass) #only select the columns I will need to work with
#mutate them to have the reduction value, based on the control in each block
#first, get the phrag height and cover values of the control
control.matrix <- biomass %>%
filter(Species == "PHAU")
biomass.control.1 <- control.matrix$Phrag.Biomass[1]
biomass.control.2 <- control.matrix$Phrag.Biomass[2]
biomass.control.3 <- control.matrix$Phrag.Biomass[3]
#now mutate the block datasets to get the reduction value
biomass.b1 <- biomass.b1 %>%
mutate(P.Biomass.Red =
(biomass.b1$Phrag.Biomass - biomass.control.1)/biomass.control.1)
biomass.b2 <- biomass.b2 %>%
mutate(P.Biomass.Red =
(biomass.b2$Phrag.Biomass - biomass.control.2)/biomass.control.2)
biomass.b3 <- biomass.b3 %>%
mutate(P.Biomass.Red =
(biomass.b3$Phrag.Biomass - biomass.control.3)/biomass.control.3)
#combine back into 1 dataset to graph
combine1 <- bind_rows(biomass.b1, biomass.b2)
final.biomass.red <- bind_rows(combine1, biomass.b3)
View(final.data.red)
final.data.red <- final.data.red %>%
mutate(Pos.Red = P.Cover.Red * -1) #to get a positive value
View(final.biomass.red)
final.biomass.red <- final.biomass.red %>%
mutate(Pos.Red = P.Biomass.Red*-1)
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Cover.Red), y = P.Cover.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Percent Change in *Phragmites* Cover", x = "Species")
cover.red
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, P.Biomass.Red), y = P.Biomass.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Change in *Phragmites* Biomass", x = "Species")
biomass.red
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Change in *Phragmites* Biomass", x = "Species")
biomass.red
biomass.red <- final.biomass.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction of *Phragmites* Biomass", x = "Species")
biomass.red
ggsave(filename = "biomass_reduction.jpeg",
device = "jpeg")
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = stats::reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
reorder(Species, Pos.Red) %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
reorder(Species, Pos.Red) %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
reorder(final.data.red$Species, final.data.red$Pos.Red) %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
as.numeric(Pos.Red) %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
final.data.red$Pos.Red
final.data.red$Pos.Red <- as.numeric(final.data.red$Pos.Red)
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(name = fct_reorder(Species, Pos.Red))
cover.red <- final.data.red %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
cover.red
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(name = fct_reorder(Species, Pos.Red)) %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
glimpse(final.data.red)
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
as.factor(Species) %>%
mutate(name = fct_reorder(Species, Pos.Red)) %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
as.factor(final.data.red$Species)
final.data.red$Species <- as.factor(final.data.red$Species)
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(name = fct_reorder(Species, Pos.Red)) %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(Species = fct_reorder(Species, Pos.Red)) %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(Species = fct_reorder(Species, Pos.Red)) %>%
filter(Species == "SCAM") %>%
mutate(mean = mean(Pos.Red))
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
mutate(Species = fct_reorder(Species, Pos.Red)) %>%
filter(Species == "SCAM") %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE))
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
arrange(Pos.Red) %>%
mutate(Species = factor(Species, levels=Species)) %>%
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean()) %>%
arrange(mean)
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red)) %>%
arrange(mean)
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red)) %>%
arrange(mean) %>%
View()
?stat_summary
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
final.data.red %>% #doing some funky stuff because reorder isn't working for some reason
filter(Species != "PHAU") %>%
ggplot(aes(x = reorder(Species, Pos.Red), y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95),
na.rm = TRUE) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95),
na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red))
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red))))
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
View()
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean)
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean) %>%
View()
#I need to calculate and manually reorder because NAs throwing off my graph
final.data.red %>%
group_by(Species, Density) %>%
mutate(mean = mean(Pos.Red, na.rm = TRUE),
se_max = mean + (sd(Pos.Red)/sqrt(length(Pos.Red))),
se_min = mean - (sd(Pos.Red)/sqrt(length(Pos.Red)))) %>%
arrange(mean) %>%
as.vector(Species)
final.data.red %>%
filter(Species != "PHAU") %>%
mutate(Species = factor(Species,
levels = c("SCAM", "JUAR", "SCAC",
"JUGE", "SYCI", "MUAS", "PUNU",
"BOMA", "SOCA", "SCPU", "EUOC", "JUTO",
"DISP", "EUMA", "BICE", "EPCI",
"RUMA", "HENU"))) %>%
ggplot(aes(x = Species, y = Pos.Red, color = Density)) +
stat_summary(aes(group = Density),
fun = mean, geom = "point",
position = position_dodge(0.95)) +
stat_summary(aes(group = Density, width = .5),
fun.data = mean_se, geom = "errorbar",
position = position_dodge(0.95)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9),
axis.title.y = ggtext::element_markdown()) +
labs(y = "Proportion Reduction in *Phragmites* Cover", x = "Species")
ggsave(filename = "cover_reduction.jpeg",
device = "jpeg")
